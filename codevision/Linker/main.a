;//-----------------------------------------------------------------------------
;// Copyright:      www.KnowledgePlus.ir
;// Author:         OZHAN KD ported by Sh. Nourbakhsh Rad
;// Remarks:
;// known Problems: none
;// Version:        1.1.0
;// Description:    SPWM test...
;//-----------------------------------------------------------------------------
;
;//	Include Headers
;//*****************************************************************************
;#include "app_config.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "HW_SPWM.h"

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;	times -> Y+1
;	i -> R17
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;
;//--------------------------------------------------
;#include "N11\N1100.h"
;#include "sFONT\sFONT.h"
;
;//--------------------------------------------------
;#include "ADC\ADC.h"
;
;//--------------------------------------------------
;#include "SPWM\SPWM.h"
;
;
;//	Constants and Varables
;//*****************************************************************************
;
;//Temp Const.
;char 														Ctemp[24];
;int  														Itemp = 0;
;
;
;//	Functions Prototype
;//*****************************************************************************
;void Initial(void);
;void Splash(void);
;
;void test01(void);
;
;
;//	<<< main function >>>
;//*****************************************************************************
;void main(void)
; 0000 002D {
;PCODE: $0000003E VOL: 0
; 0000 002E 	Initial();
;PCODE: $0000003F VOL: 0
; 0000 002F 	test01();
;PCODE: $00000040 VOL: 0
; 0000 0030 
; 0000 0031 	while(1);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0032 } //main
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;
;
;//---------------------------------------------------------//
;//---------------------------------------------------------//
;void Initial(void)
; 0000 0038 {
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0039 	cli();												//Interrupts disable
;PCODE: $00000049 VOL: 0
	cli
;PCODE: $0000004A VOL: 0
; 0000 003A 
; 0000 003B 	HW_init();
;PCODE: $0000004B VOL: 0
; 0000 003C 	a2dInit();										//AVCC & DIV64
;PCODE: $0000004C VOL: 0
; 0000 003D 
; 0000 003E 	_delay_ms(500);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 003F 
; 0000 0040 	//----------------------
; 0000 0041 	N11_Init();
;PCODE: $0000004F VOL: 0
; 0000 0042 	N11_Contrast(10);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0043 	N11_Backlight(ON);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0044 
; 0000 0045 	//----------------------
; 0000 0046 	BUZZER(BOOT_sign);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0047 	_delay_ms(500);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0048 
; 0000 0049 	//----------------------
; 0000 004A 	//static FILE mystdout = FDEV_SETUP_STREAM(N11_PrintChar, NULL, _FDEV_SETUP_WRITE);
; 0000 004B   //stdout = &mystdout;
; 0000 004C 
; 0000 004D 	N11_CLS();
;PCODE: $00000058 VOL: 0
; 0000 004E 
; 0000 004F 	//----------------------
; 0000 0050 	Splash();
;PCODE: $00000059 VOL: 0
; 0000 0051 	BUZZER(OK_sign);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0052 
; 0000 0053 	//------------
; 0000 0054 	sei();												//Interrupts enabel
;PCODE: $0000005C VOL: 0
	sei
;PCODE: $0000005D VOL: 0
; 0000 0055 }	//Initial
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;
;void Splash(void)
; 0000 0058 {
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0059 	static char *SPchar[5] = {
; 0000 005A 			"  SPWM test!!!",
; 0000 005B 			"by :",
; 0000 005C 			"Sh. Nourbakhsh",
; 0000 005D 			"Copyright:",
; 0000 005E 			"    OZHAN KD"
; 0000 005F 			};

	.DSEG
_0xA:
	.BYTE 0x3B

	.CSEG
; 0000 0060 
; 0000 0061 	//-------------
; 0000 0062 	StringAt(0, 2, SPchar[0]);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0063 	StringAt(2, 2, SPchar[1]);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0064 	StringAt(3, 2, SPchar[2]);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0065 	StringAt(5, 2, SPchar[3]);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0066 	StringAt(6, 2, SPchar[4]);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0067 
; 0000 0068 	//-------------
; 0000 0069 	_delay_ms(3000);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 006A 	N11_CLS();
;PCODE: $00000086 VOL: 0
; 0000 006B }	//Splash
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;
;
;//---------------------------------------------------------//
;//---------------------------------------------------------//
;void test01(void)
; 0000 0071 {
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0072 	unsigned char				LVflag 	= 0;
; 0000 0073 	unsigned int				TCRtemp = 0;
; 0000 0074 	unsigned char				i 			= 0;
; 0000 0075 
; 0000 0076 	unsigned int				FRQtemp;
; 0000 0077 	unsigned char				ACCtemp;
; 0000 0078 	unsigned char				DECtemp;
; 0000 0079 
; 0000 007A 	SPWM_init();
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;	LVflag -> R17
;	TCRtemp -> R18,R19
;	i -> R16
;	FRQtemp -> R20,R21
;	ACCtemp -> Y+7
;	DECtemp -> Y+6
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 007B 
; 0000 007C 	ADC_CH_init(FRQ_ACH);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 007D 	ADC_CH_init(ACC_ACH);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 007E 	ADC_CH_init(DEC_ACH);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 007F 
; 0000 0080 	//----- main loop!
; 0000 0081 	while(1)
;PCODE: $000000A6 VOL: 0
; 0000 0082 	{
; 0000 0083 		if(TCounter>=TCRtemp)									//100mS
;PCODE: $000000A7 VOL: 1
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0084 		{
; 0000 0085 			TCRtemp = TCounter +100;						//1mS x100
;PCODE: $000000AA VOL: 1
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0086 
; 0000 0087 			FRQtemp = a2dConvert10bit(FRQ_ACH);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0088 			ACCtemp = a2dConvert8bit(ACC_ACH);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0089 			DECtemp = a2dConvert8bit(DEC_ACH);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 008A 
; 0000 008B 			//-------------------------------
; 0000 008C 			FRQtemp = SetFrequency(FRQtemp);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 008D 			ACCtemp = SetAcceleration(ACCtemp);
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 008E 			DECtemp = SetDeceleration(DECtemp);
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 008F 
; 0000 0090 			//-------------------------------
; 0000 0091 			sprintf(Ctemp, "FRQ: %03d.%01d Hz ", (FRQtemp/10), (FRQtemp%10));
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0092 			StringAt(1, 2, Ctemp);
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0093 
; 0000 0094 			sprintf(Ctemp, "ACC: %03d sec ", ACCtemp);
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0095 			StringAt(3, 2, Ctemp);
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0096 
; 0000 0097 			sprintf(Ctemp, "DEC: %03d sec ", DECtemp);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0098 			StringAt(5, 2, Ctemp);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0099 
; 0000 009A 			i++;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 009B 			if(i==5)					{						LVflag = 1;		}
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 009C 			else if(i==10)		{	i = 0;		LVflag = 0;	}
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 009D 		}
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 009E 
; 0000 009F 		GLED(LVflag);
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00A0 		//_delay_ms(200);
; 0000 00A1 	}//while
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00A2 } //test01
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
